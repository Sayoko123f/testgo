<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on My New Hugo Site</title><link>https://sayoko123f.github.io/testgo/categories/frontend/</link><description>Recent content in Frontend on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Sun, 05 Jun 2022 09:49:47 +0800</lastBuildDate><atom:link href="https://sayoko123f.github.io/testgo/categories/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>Intersection Observer</title><link>https://sayoko123f.github.io/testgo/p/intersection-observer/</link><pubDate>Sun, 05 Jun 2022 09:49:47 +0800</pubDate><guid>https://sayoko123f.github.io/testgo/p/intersection-observer/</guid><description>JavaScript Intersection Observer API 筆記 Intersection Observer(以下稱交集觀察者或觀察者) 筆記。
常用屬性跟方法 IntersectionObserverEntry.intersectionRatio 描述元素可見的比例，為範圍 1.0 至 0.0 之間的數字。
IntersectionObserverEntry.target 指向被觀察的目標元素。
IntersectionObserverEntry.isIntersecting 一個 Boolean 值，如果目標元素處於相交狀態則為 true，反之為 false。
IntersectionObserver.observe() 傳入 Element 開始觀察。
observe(targetElement) 該元素必須是 IntersectionObserver.root 元素的後代。
IntersectionObserver.unobserve() 停止觀察該元素。
unobserve(target) 就算該元素不是正在被觀察也不會拋出任何錯誤。
IntersectionObserver.disconnect() 停止觀察所有元素。
IntersectionObserver() MDN
建立觀察者實例的建構函式。
new IntersectionObserver(callback) new IntersectionObserver(callback, options) 有兩個引數會被傳入 callback ：
第一引數是 IntersectionObserverEntry[]；
第二引數是 IntersectionObserver 觀察者的實例；
callback 起手式如下：
function handleIntersect(entries, observer) { entries.forEach((entry) =&amp;gt; { const { target } = entry; if (entry.</description></item></channel></rss>